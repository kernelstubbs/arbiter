---
version: '3.7'

x-defaultCONF: &defaultCONF
  domainname: beowulf.cc
  environment:
    - 'TZ=America/Toronto'
    - 'PUID=1026'
    - 'PGID=101'
  restart: always
    

x-driver_opts: &driverOpts
  type: nfs
  o: addr=10.10.10.252,rw,bg,intr,soft,nolock
x-nfs-driver: &nfsDriver
  driver: local

services: 

########################################################################
##
##          Management
##
##    Traefik - Reverse proxy and SSL encryption
##    
##
########################################################################
  traefik:
    container_name: traefik
    image: traefik
    hostname: traefik
    <<: *defaultCONF
    env_file: [./env/traefik.env]
    command: 
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      # LetsEncrypt
      - '--certificatesresolvers.CFWildcard.acme.email=stubbe@live.ca'
      - '--certificatesresolvers.CFWildcard.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.CFWildcard.acme.storage=/etc/traefik/acme.json'
    labels: 
      - 'com.centurylinklabs.watchtower.enable=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.beowulf.cc`)'
      - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
      - 'traefik.http.services.traefik.loadbalancer.server.scheme=http'
      # HTTP ==> HTTPS
      - 'traefik.http.routers.http-catchall.rule=hostregexp(`{host:[a-z-.]+}`)'
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.routers.http-catchall.priority=1'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      # CF Wildcard
      - 'traefik.http.routers.traefik.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.traefik.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.traefik.tls.certresolver=CFWildcard'
    ports:
      - '80:80'
      - '443:443'
    networks:
      - piHole-net
      - plex-net
      - port-net
      - torrent-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefikETC:/etc/traefik
    

########################################################################
##
##          Media
##
##    Plex - Media/Streaming server
##    Radarr - Movie downloading and library bigip_management
##    Sonarr - Television download scheduling
##
##        ####################################
##        ##          VPN Containers
##        ####################################
##        VPN - NordVPN container [Requires Subscription]
##        Deluge - Torrent downloading
##        Jackett - Magnet link rss generator for Sonarr and Radarr
##
##
########################################################################
  plex:
    container_name: plex
    image: linuxserver/plex
    hostname: plex
    <<: *defaultCONF
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.plex.rule=Host(`plex.beowulf.cc`)'
      - 'traefik.http.routers.plex.entrypoints=websecure'
      - 'traefik.http.routers.plex.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.plex.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.plex.tls.certresolver=CFWildcard'
      - 'traefik.http.services.plex.loadbalancer.server.port=32400'
      - 'traefik.docker.network=docker_plex-net'
    ports:
      - '1900:1900/udp'
      - '3005:3005/tcp'
      - '5353:5353/udp'
      - '8324:8324/tcp'
      - '32410:32410/udp'
      - '32412-32414:32412-32414/udp'
      - '32469:32469/tcp'
      - '32469:32469/udp'
    networks: [plex-net]
    volumes:
      - plexCFG:/config
      - plexLib:/data
  radarr:
    container_name: radarr
    image: linuxserver/radarr
    hostname: radarr
    <<: *defaultCONF
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.radarr.rule=Host(`radarr.beowulf.cc`)'
      - 'traefik.http.routers.radarr.entrypoints=websecure'
      - 'traefik.http.routers.radarr.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.radarr.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.radarr.tls.certresolver=CFWildcard'
      - 'traefik.http.services.radarr.loadbalancer.server.port=7878'
      - 'traefik.docker.network=docker_torrent-net'
    networks:
      - torrent-net
      - plex-net
    volumes:
      - radarrCFG:/config
      - plexMovies:/movies
      - downloads:/downloads
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    hostname: sonarr
    <<: *defaultCONF
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.sonarr.rule=Host(`sonarr.beowulf.cc`)'
      - 'traefik.http.routers.sonarr.entrypoints=websecure'
      - 'traefik.http.routers.sonarr.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.sonarr.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.sonarr.tls.certresolver=CFWildcard'
      - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'
      - 'traefik.docker.network=docker_torrent-net'
    networks:
      - torrent-net
      - plex-net
    volumes:
      - sonarrCFG:/config
      - plexTV:/tv
      - downloads:/downloads

####################################
##
##          VPN Containers
##
####################################
  vpn:
    container_name: vpn
    image: bubuntux/nordvpn #:3.7.4
    hostname: vpn
    <<: *defaultCONF
    env_file: [./env/nordvpn.env]
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=docker_torrent-net'
      # deluge
      - 'traefik.http.routers.deluge.rule=Host(`deluge.beowulf.cc`)'
      - 'traefik.http.routers.deluge.entrypoints=websecure'
      - 'traefik.http.routers.deluge.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.deluge.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.deluge.tls.certresolver=CFWildcard'
      - 'traefik.http.routers.deluge.service=deluge'
      - 'traefik.http.services.deluge.loadbalancer.server.port=8112'
      # jackett
      - 'traefik.http.routers.jackett.rule=Host(`jackett.beowulf.cc`)'
      - 'traefik.http.routers.jackett.entrypoints=websecure'
      - 'traefik.http.routers.jackett.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.jackett.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.jackett.tls.certresolver=CFWildcard'
      - 'traefik.http.routers.jackett.service=jackett'
      - 'traefik.http.services.jackett.loadbalancer.server.port=9117'
      # vpn
      - 'traefik.http.routers.vpn.rule=Host(`vpn.beowulf.cc`)'
      - 'traefik.http.routers.vpn.entrypoints=websecure'
      - 'traefik.http.routers.vpn.tls.domains[0].main=beowulf.cc'
      - 'traefik.http.routers.vpn.tls.domains[0].sans=*.beowulf.cc'
      - 'traefik.http.routers.vpn.tls.certresolver=CFWildcard'
      - 'traefik.http.routers.vpn.service=vpn'
      - 'traefik.http.services.vpn.loadbalancer.server.port=8118'
    ports:
      - '58846:58846'
      - '58946:58946'
    networks: [torrent-net]
    devices: [/dev/net/tun]
    sysctls: [net.ipv4.conf.all.rp_filter=2] # Temp Fix for https://github.com/bubuntux/nordvpn/issues/75
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
  deluge: # Watchtower currently cannot update containers in a vpn
    container_name: deluge
    image: linuxserver/deluge
    <<: *defaultCONF
    labels: [com.centurylinklabs.watchtower.enable='false']
    volumes:
      - delugeCFG:/config
      - downloads:/downloads
    network_mode: service:vpn
    depends_on: [vpn]
  jackett: # Watchtower currently cannot update containers in a vpn
    container_name: jackett
    image: linuxserver/jackett
    <<: *defaultCONF
    labels: [com.centurylinklabs.watchtower.enable='false']
    volumes:
      - jackettCFG:/config
      - TMP:/downloads
    network_mode: service:vpn
    depends_on: [vpn]
    
networks:
  plex-net:
  torrent-net:

volumes:
  delugeCFG:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/deluge/config'
  downloads:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/downloads'
  jackettCFG:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/jackett/config'
  piETC:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/pihole/etc-pihole'
  piMasq:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/pihole/etc-dnsmasq.d'
  plexCFG:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/plex/config'
  plexLib:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/plex/library'
  plexMovies:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/plex/library/movies'
  plexTV:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/plex/library/television'
  portainerDAT:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/portainer/data'
  radarrCFG: 
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/radarr/config'
  sonarrCFG:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/sonarr/config'
  TMP:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/tmp'
  traefikETC:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ':/volume1/docker/traefik/etc'
